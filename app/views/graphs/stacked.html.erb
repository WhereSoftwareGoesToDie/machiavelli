<%= javascript_include_tag "rickshaw" %>
<%= stylesheet_link_tag    "graphs/stacked" %>
<%= javascript_include_tag "graphs/stacked.js" %>
<%= stylesheet_link_tag    "graphs/dckx" if dckx %>
<div class="slider" id="slider"></div>
<span id="zoomtoselected" class="no_link zoomtoselected"></span>
<div id="chart_container">
	<div class="y_axis" id="y_axis"></div>
	<div class="chart"  id="chart"></div>
	<div class="y_axis right_axis" id="y_axis_right"></div>
	<div class="x_axis" id="x_axis"></div>
	<div class="legend" id="legend-dual"></div>
</div>
<script>
var data = [], metrics =  [], format_metrics = [], right_links = [], left_links = [];
var reset = "<%= obl_qs :right%>";
var right_id = ["<%= (que_qs :right).join('","').html_safe%>"];

<% def to_bool(s) return s == "on" ? true : false; end 
def check_param(s,allowed) 
	v = get_param(s)
	v if allowed.include? v.to_s
end%>

var config = {}
config.renderer = '<%= check_param(:render, ["line","area","bar"]) || "line" %>'
config.stack = <%= to_bool(check_param(:stack, ["on","off"]) || ui_defaults("stack")) %>

<% @gon.metrics.each do |m| %>
	metrics.push("<%= m[:metric] %>");
	format_metrics.push("<%= style_metric :pretty, m[:metric]%>")
	right_links.push("<%= add_qs :right, m[:id]%>");
	left_links.push("<%= rem_qs :right, m[:id]%>");
<%end%>

var graph;
renderWaiting("chart");
<% if dckx %>
	data = getMetrics(metrics,"xkcd");
<% else %>
	data = getMetrics(metrics);
<% end %>

var intervalID;
function startUpdates() { intervalID = updateStacked(); } 
function stopUpdates()  { clearInterval(intervalID); } 
zoomtoselected()
</script>
